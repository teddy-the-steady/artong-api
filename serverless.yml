service: artong-api
app: artong-api

provider:
  name: aws
  runtime: nodejs12.x
  stage: stage #prod
  region: ap-northeast-2
  environment:
    ENV: ${self:provider.stage}
    NODE_PATH: './:/opt/node_modules'
  apiKeys:
    - artongApiKeyStage
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:PutObject'
        - 's3:GetObject'
        - 's3:ListBucket'
      Resource:
        - 'arn:aws:s3:::artong-stage-image163347-stage'
        - 'arn:aws:s3:::artong-stage-image163347-stage/*'
    - Effect: 'Allow'
      Action:
        - 'ssm:GetParameters'
      Resource:
        - 'arn:aws:ssm:ap-northeast-2:821343553435:parameter/*'
  vpc:
    securityGroupIds:
      - sg-07149fcb367dc482b
    subnetIds:
      - subnet-0285f180e2f0c6ec0
      - subnet-091d67b7e5ec421bb

package:
  individually: true
  exclude:
    - node_layers/**

layers:
  NodeModules:
    path: node_layers
    description: 'includes pg, handlebars, axios'

plugins:
  - serverless-webpack
  - serverless-offline

functions:
  artong:
    handler: artong/handler/artong.handler
    events:
     - http:
        path: artong/v1/member
        method: GET
        cors: true
     - http:
        path: artong/v1/member
        method: POST
        cors: true
     - http:
        path: artong/v1/member/{id}
        method: GET
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/member/{id}/profilePic
        method: PATCH
        cors: true
        private: true
     - http:
        path: artong/v1/memberMaster/{id}
        method: PATCH
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/memberDetail/{member_id}
        method: PATCH
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/uploads
        method: GET
        cors: true
     - http:
        path: artong/v1/auth/uploads
        method: GET
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/uploads
        method: POST
        cors: true
        private: true
     - http:
        path: artong/v1/uploads/{id}/actions
        method: POST
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
    layers:
     - {Ref: NodeModulesLambdaLayer}
  artong-admin:
    handler: artong/handler/artong.handler
    events:
     - http:
        path: artong/v1/status
        method: GET
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/status
        method: POST
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/status/{id}
        method: PUT
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/country
        method: POST
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
    layers:
     - {Ref: NodeModulesLambdaLayer}
  photo:
    handler: artong/handler/photo.handler
    events:
     - s3:
        bucket: artong-stage-image163347-stage
        event: s3:ObjectCreated:*
        rules:
          - prefix: public/
        existing: true
    layers:
     - {Ref: NodeModulesLambdaLayer}

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'