service: artong-api
app: artong-api
org: superduper8989

provider:
  name: aws
  runtime: nodejs12.x
  stage: stage
  region: ap-northeast-2
  # resourcePolicy:
  #   - Effect: Allow
  #     Principal: "*"
  #     Action: execute-api:Invoke
  #     Resource:
  #       - execute-api:/*/GET/api/v1/imageUpUrl
  #       - execute-api:/*/OPTIONS/api/v1/imageUpUrl
  #       - execute-api:/*/GET/api/v1/naverOcr
  #       - execute-api:/*/OPTIONS/api/v1/naverOcr
  #     Condition:
  #       IpAddress:
  #         aws:SourceIp:
  #           - '61.98.131.200'
  #           - '61.98.131.205'
  #   - Effect: Allow
  #     Principal: "*"
  #     Action: execute-api:Invoke
  #     Resource:
  #       - execute-api:/*/*/*
  #     Condition:
  #       StringLike:
  #         aws:Referer:
  #           - 'http://artong.com/*'
  #           - 'http://www.artong.com/*'
  environment:
    NODE_PATH: "./:/opt/node_modules"
  # apiKeys:
  #   - artongApiKey
  # usagePlan:
  #   quota:
  #     limit: 30000
  #     offset: 0
  #     period: MONTH
  #   throttle:
  #     burstLimit: 5000
  #     rateLimit: 10000

package:
 exclude:
   - node_layers/**

layers:
  NodeModules:
    path: node_layers
    description: "includes mysql2, handlebars, joi"

plugins:
  - serverless-iam-roles-per-function

custom:
  cors:
    origins:
      - 'http://localhost:3000'
      - 'http://localhost:8080'
      - 'http://*.amazonaws.com'
    headers:
      - Content-Type
      - X-Amz-Date
      - Authorization
      - X-Api-Key
      - X-Amz-Security-Token
      - X-Amz-User-Agent
    allowCredentials: false
# cors: ${self:custom.cors} 로 설정
# Api Gateway 콘솔 options 통합응답에서 Access-Control-Allow-Origin: '*' 이면 매핑 템플릿에 else문 추가
# #else #set($context.responseOverride.header.Access-Control-Allow-Origin = "")

functions:
  hello:
    handler: handler.hello
    # iamRoleStatements:
    #   - Effect: 'Allow'
    #     Action:
    #       - 's3:PutObject'
    #       - 's3:GetObject'
    #       - 's3:ListBucket'
    #     Resource:
    #       - 'arn:aws:s3:::refdm-excel'
    #       - 'arn:aws:s3:::refdm-excel/*'
    # vpc:
    #   securityGroupIds:
    #     - sg-0cadc6e28196dd89e
    #   subnetIds:
    #     - subnet-0994b73fe5ef30dd0
    events:
     - http: GET users/hello
        # private: true
  test:
    handler: service/handler/test.handler
    events:
     - http:
        path: test/product
        method: get
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: test/product/{id}
        method: get
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: test/product
        method: post
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
    layers:
     - {Ref: NodeModulesLambdaLayer} 
    environment:
      DB_HOST: kcmta.czl2qpvgencs.ap-northeast-2.rds.amazonaws.com
      DB_DATABASE: test
      DB_USER: test_user
      DB_PASSWORD: xogh891115@
  product:
    handler: service/handler/product.handler
    events:
     - http:
        path: artong/v1/product
        method: get
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/product/{barcode}
        method: get
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/product
        method: post
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
    layers:
     - {Ref: NodeModulesLambdaLayer} 
    environment:
      DB_HOST: refdm-database-1-instance-1.cwciwhxt0anw.ap-northeast-2.rds.amazonaws.com
      DB_DATABASE: DEV_REFDM
      DB_USER: sm
      DB_PASSWORD: rlatkdrl1!

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'