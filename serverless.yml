service: artong-api
app: artong-api
org: superduper8989

provider:
  name: aws
  runtime: nodejs12.x
  stage: stage
  region: ap-northeast-2
  # cfnRole: arn:aws:iam::821343553435:role/artongApiCFProd
  environment:
    NODE_PATH: "./:/opt/node_modules"

package:
 exclude:
   - node_layers/**

layers:
  NodeModules:
    path: node_layers
    description: "includes mysql2, handlebars, joi"

plugins:
  - serverless-iam-roles-per-function

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

functions:
  hello:
    handler: handler.hello
    iamRoleStatements: []
    events:
     - http: GET users/hello
  test:
    handler: service/handler/test.handler
    events:
     - http:
        path: test/product
        method: get
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: test/product/{id}
        method: get
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: test/product
        method: post
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
    layers:
     - {Ref: NodeModulesLambdaLayer} 
    environment:
      DB_HOST: kcmta.czl2qpvgencs.ap-northeast-2.rds.amazonaws.com
      DB_DATABASE: test
      DB_USER: test_user
      DB_PASSWORD: xogh891115@
  product:
    handler: service/handler/product.handler
    events:
     - http:
        path: artong/v1/product
        method: get
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/product/{barcode}
        method: get
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
     - http:
        path: artong/v1/product
        method: post
        cors: true
        authorizer: arn:aws:lambda:ap-northeast-2:821343553435:function:authorizer
    layers:
     - {Ref: NodeModulesLambdaLayer} 
    environment:
      DB_HOST: refdm-database-1-instance-1.cwciwhxt0anw.ap-northeast-2.rds.amazonaws.com
      DB_DATABASE: DEV_REFDM
      DB_USER: sm
      DB_PASSWORD: rlatkdrl1!

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
