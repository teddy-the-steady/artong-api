service: artong-api
app: artong-api
org: superduper8989

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: ap-northeast-2
  # cfnRole: arn:aws:iam::821343553435:role/artongApiCFProd
  environment:
    NODE_PATH: "./:/opt/node_modules"

package:
 exclude:
   - node_layers/**

layers:
  NodeModules:
    path: node_layers
    description: "includes mysql2, handlebars, joi"

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

functions:
  hello:
    handler: handler.hello
    iamRoleStatements: []
    events:
     - http: GET users/hello
  test:
    handler: service/handler/testHandler.test
    events:
     - http:
        path: test/product
        method: get
     - http:
        path: test/product/{id}
        method: get
        cors: true
        # authorizer: arn:aws:lambda:ap-northeast-2:073465099406:function:authorizer
     - http:
        path: test/product
        method: post
        cors: true
        # authorizer: arn:aws:lambda:ap-northeast-2:073465099406:function:authorizer
    layers:
     - {Ref: NodeModulesLambdaLayer} 
    environment:
      DB_HOST: database-1-instance-1.cwciwhxt0anw.ap-northeast-2.rds.amazonaws.com
      DB_DATABASE: test
      DB_USER: jeonth
      DB_PASSWORD: abc12345@

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-iam-roles-per-function